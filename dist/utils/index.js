!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{var r=t();for(var o in r)("object"==typeof exports?exports:e)[o]=r[o]}}(this,(function(){return function(){"use strict";var e={d:function(t,r){for(var o in r)e.o(r,o)&&!e.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:r[o]})},o:function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r:function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};function r(e){const{format:t,value:r,magicValue:o}=e;if(!t)throw new Error("period format is required");if("magic"===t&&"string"!=typeof o&&"number"!=typeof o)throw new Error(" unexpected magicValue "+o+" for format magic. Must be string|number");if("date"===t&&("object"!=typeof r||!r.start))throw new Error(" unexpected period value for format date. must be of type {start:string, end:string}")}return e.r(t),e.d(t,{checkPeriod:function(){return r}}),t}()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbHMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkNBQUEsU0FBMkNBLEVBQU1DLEdBQ2hELEdBQXNCLGlCQUFaQyxTQUEwQyxpQkFBWEMsT0FDeENBLE9BQU9ELFFBQVVELFNBQ2IsR0FBcUIsbUJBQVhHLFFBQXlCQSxPQUFPQyxJQUM5Q0QsT0FBTyxHQUFJSCxPQUNQLENBQ0osSUFBSUssRUFBSUwsSUFDUixJQUFJLElBQUlNLEtBQUtELEdBQXVCLGlCQUFaSixRQUF1QkEsUUFBVUYsR0FBTU8sR0FBS0QsRUFBRUMsRUFDdkUsQ0FDQSxDQVRELENBU0dDLE1BQU0sV0FDVCxPLHdCQ1RBLElBQUlDLEVBQXNCLENDQTFCQSxFQUF3QixTQUFTUCxFQUFTUSxHQUN6QyxJQUFJLElBQUlDLEtBQU9ELEVBQ1hELEVBQW9CRyxFQUFFRixFQUFZQyxLQUFTRixFQUFvQkcsRUFBRVYsRUFBU1MsSUFDNUVFLE9BQU9DLGVBQWVaLEVBQVNTLEVBQUssQ0FBRUksWUFBWSxFQUFNQyxJQUFLTixFQUFXQyxJQUczRSxFQ1BBRixFQUF3QixTQUFTUSxFQUFLQyxHQUFRLE9BQU9MLE9BQU9NLFVBQVVDLGVBQWVDLEtBQUtKLEVBQUtDLEVBQU8sRUNDdEdULEVBQXdCLFNBQVNQLEdBQ1gsb0JBQVhvQixRQUEwQkEsT0FBT0MsYUFDMUNWLE9BQU9DLGVBQWVaLEVBQVNvQixPQUFPQyxZQUFhLENBQUVDLE1BQU8sV0FFN0RYLE9BQU9DLGVBQWVaLEVBQVMsYUFBYyxDQUFFc0IsT0FBTyxHQUN2RCxHLEtDSk8sU0FBU0MsRUFBWUMsR0FDMUIsTUFBTSxPQUFFQyxFQUFNLE1BQUVILEVBQUssV0FBRUksR0FBZUYsRUFDdEMsSUFBS0MsRUFBUSxNQUFNLElBQUlFLE1BQU0sNkJBQzdCLEdBQWUsVUFBWEYsR0FNd0IsaUJBQWZDLEdBQWlELGlCQUFmQSxFQUMzQyxNQUFNLElBQUlDLE1BQ1IsMEJBQTBCRCxFQUFXLDRDQUkzQyxHQUFlLFNBQVhELElBQ21CLGlCQUFWSCxJQUF1QkEsRUFBTU0sT0FDdEMsTUFBTSxJQUFJRCxNQUNSLHVGQUtSLEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9hbmFseXRpY3MtY2xpZW50L3dlYnBhY2svdW5pdmVyc2FsTW9kdWxlRGVmaW5pdGlvbiIsIndlYnBhY2s6Ly9hbmFseXRpY3MtY2xpZW50L3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL2FuYWx5dGljcy1jbGllbnQvd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjazovL2FuYWx5dGljcy1jbGllbnQvd2VicGFjay9ydW50aW1lL2hhc093blByb3BlcnR5IHNob3J0aGFuZCIsIndlYnBhY2s6Ly9hbmFseXRpY3MtY2xpZW50L3dlYnBhY2svcnVudGltZS9tYWtlIG5hbWVzcGFjZSBvYmplY3QiLCJ3ZWJwYWNrOi8vYW5hbHl0aWNzLWNsaWVudC8uL3NyYy91dGlscy9pbmRleC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gd2VicGFja1VuaXZlcnNhbE1vZHVsZURlZmluaXRpb24ocm9vdCwgZmFjdG9yeSkge1xuXHRpZih0eXBlb2YgZXhwb3J0cyA9PT0gJ29iamVjdCcgJiYgdHlwZW9mIG1vZHVsZSA9PT0gJ29iamVjdCcpXG5cdFx0bW9kdWxlLmV4cG9ydHMgPSBmYWN0b3J5KCk7XG5cdGVsc2UgaWYodHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiBkZWZpbmUuYW1kKVxuXHRcdGRlZmluZShbXSwgZmFjdG9yeSk7XG5cdGVsc2Uge1xuXHRcdHZhciBhID0gZmFjdG9yeSgpO1xuXHRcdGZvcih2YXIgaSBpbiBhKSAodHlwZW9mIGV4cG9ydHMgPT09ICdvYmplY3QnID8gZXhwb3J0cyA6IHJvb3QpW2ldID0gYVtpXTtcblx0fVxufSkodGhpcywgZnVuY3Rpb24oKSB7XG5yZXR1cm4gIiwiLy8gVGhlIHJlcXVpcmUgc2NvcGVcbnZhciBfX3dlYnBhY2tfcmVxdWlyZV9fID0ge307XG5cbiIsIi8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb25zIGZvciBoYXJtb255IGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uZCA9IGZ1bmN0aW9uKGV4cG9ydHMsIGRlZmluaXRpb24pIHtcblx0Zm9yKHZhciBrZXkgaW4gZGVmaW5pdGlvbikge1xuXHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhkZWZpbml0aW9uLCBrZXkpICYmICFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywga2V5KSkge1xuXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGRlZmluaXRpb25ba2V5XSB9KTtcblx0XHR9XG5cdH1cbn07IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5vID0gZnVuY3Rpb24ob2JqLCBwcm9wKSB7IHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKTsgfSIsIi8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uciA9IGZ1bmN0aW9uKGV4cG9ydHMpIHtcblx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG5cdH1cblx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbn07IiwiaW1wb3J0IHsgVFBlcmlvZCB9IGZyb20gXCJAc3JjL3R5cGVzXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBjaGVja1BlcmlvZChwZXJpb2Q6IFRQZXJpb2QpIHtcbiAgY29uc3QgeyBmb3JtYXQsIHZhbHVlLCBtYWdpY1ZhbHVlIH0gPSBwZXJpb2Q7XG4gIGlmICghZm9ybWF0KSB0aHJvdyBuZXcgRXJyb3IoXCJwZXJpb2QgZm9ybWF0IGlzIHJlcXVpcmVkXCIpO1xuICBpZiAoZm9ybWF0ID09PSBcIm1hZ2ljXCIpIHtcbiAgICAvLyBpZiAodHlwZSAhPT0gXCJkYXlcIikge1xuICAgIC8vICAgdGhyb3cgbmV3IEVycm9yKFxuICAgIC8vICAgICBcIlVuZXhwZWN0ZWQgUGVyaW9kIHR5cGUgZm9yIGZvcm1hdCBtYWdpYy4gb25seSAnZGF5JyBpcyBzdXBvcnRlZFwiXG4gICAgLy8gICApO1xuICAgIC8vIH1cbiAgICBpZiAodHlwZW9mIG1hZ2ljVmFsdWUgIT09IFwic3RyaW5nXCIgJiYgdHlwZW9mIG1hZ2ljVmFsdWUgIT09IFwibnVtYmVyXCIpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgXCIgdW5leHBlY3RlZCBtYWdpY1ZhbHVlIFwiK21hZ2ljVmFsdWUrXCIgZm9yIGZvcm1hdCBtYWdpYy4gTXVzdCBiZSBzdHJpbmd8bnVtYmVyXCJcbiAgICAgICk7XG4gICAgfVxuICB9XG4gIGlmIChmb3JtYXQgPT09IFwiZGF0ZVwiKSB7XG4gICAgaWYgKHR5cGVvZiB2YWx1ZSAhPT0gXCJvYmplY3RcIiB8fCAhdmFsdWUuc3RhcnQpXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgIFwiIHVuZXhwZWN0ZWQgcGVyaW9kIHZhbHVlIGZvciBmb3JtYXQgZGF0ZS4gbXVzdCBiZSBvZiB0eXBlIHtzdGFydDpzdHJpbmcsIGVuZDpzdHJpbmd9XCJcbiAgICAgICk7XG4gIH1cblxuICAvLyBUT0RPOjogY2hlY2sgaWYgaXMgdmFsaWQgZGF0ZVxufVxuIl0sIm5hbWVzIjpbInJvb3QiLCJmYWN0b3J5IiwiZXhwb3J0cyIsIm1vZHVsZSIsImRlZmluZSIsImFtZCIsImEiLCJpIiwidGhpcyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJkZWZpbml0aW9uIiwia2V5IiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsIm9iaiIsInByb3AiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJTeW1ib2wiLCJ0b1N0cmluZ1RhZyIsInZhbHVlIiwiY2hlY2tQZXJpb2QiLCJwZXJpb2QiLCJmb3JtYXQiLCJtYWdpY1ZhbHVlIiwiRXJyb3IiLCJzdGFydCJdLCJzb3VyY2VSb290IjoiIn0=
!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{var o=t();for(var n in o)("object"==typeof exports?exports:e)[n]=o[n]}}(this,(function(){return function(){"use strict";var e={d:function(t,o){for(var n in o)e.o(o,n)&&!e.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:o[n]})},o:function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r:function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};e.r(t),e.d(t,{AnalyticsClientBaseClass:function(){return o}});class o{async getVisitsPerPeriod(e){}async getEventCount(e){}}return t}()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHlwZXMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkNBQUEsU0FBMkNBLEVBQU1DLEdBQ2hELEdBQXNCLGlCQUFaQyxTQUEwQyxpQkFBWEMsT0FDeENBLE9BQU9ELFFBQVVELFNBQ2IsR0FBcUIsbUJBQVhHLFFBQXlCQSxPQUFPQyxJQUM5Q0QsT0FBTyxHQUFJSCxPQUNQLENBQ0osSUFBSUssRUFBSUwsSUFDUixJQUFJLElBQUlNLEtBQUtELEdBQXVCLGlCQUFaSixRQUF1QkEsUUFBVUYsR0FBTU8sR0FBS0QsRUFBRUMsRUFDdkUsQ0FDQSxDQVRELENBU0dDLE1BQU0sV0FDVCxPLHdCQ1RBLElBQUlDLEVBQXNCLENDQTFCQSxFQUF3QixTQUFTUCxFQUFTUSxHQUN6QyxJQUFJLElBQUlDLEtBQU9ELEVBQ1hELEVBQW9CRyxFQUFFRixFQUFZQyxLQUFTRixFQUFvQkcsRUFBRVYsRUFBU1MsSUFDNUVFLE9BQU9DLGVBQWVaLEVBQVNTLEVBQUssQ0FBRUksWUFBWSxFQUFNQyxJQUFLTixFQUFXQyxJQUczRSxFQ1BBRixFQUF3QixTQUFTUSxFQUFLQyxHQUFRLE9BQU9MLE9BQU9NLFVBQVVDLGVBQWVDLEtBQUtKLEVBQUtDLEVBQU8sRUNDdEdULEVBQXdCLFNBQVNQLEdBQ1gsb0JBQVhvQixRQUEwQkEsT0FBT0MsYUFDMUNWLE9BQU9DLGVBQWVaLEVBQVNvQixPQUFPQyxZQUFhLENBQUVDLE1BQU8sV0FFN0RYLE9BQU9DLGVBQWVaLEVBQVMsYUFBYyxDQUFFc0IsT0FBTyxHQUN2RCxHLG1FQ0pPLE1BQU1DLEVBQ1gsd0JBQU1DLENBQW1CQyxHQUEwQixDQUVuRCxtQkFBTUMsQ0FBY0QsR0FBOEIsRSIsInNvdXJjZXMiOlsid2VicGFjazovL2FuYWx5dGljcy1jbGllbnQvd2VicGFjay91bml2ZXJzYWxNb2R1bGVEZWZpbml0aW9uIiwid2VicGFjazovL2FuYWx5dGljcy1jbGllbnQvd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vYW5hbHl0aWNzLWNsaWVudC93ZWJwYWNrL3J1bnRpbWUvZGVmaW5lIHByb3BlcnR5IGdldHRlcnMiLCJ3ZWJwYWNrOi8vYW5hbHl0aWNzLWNsaWVudC93ZWJwYWNrL3J1bnRpbWUvaGFzT3duUHJvcGVydHkgc2hvcnRoYW5kIiwid2VicGFjazovL2FuYWx5dGljcy1jbGllbnQvd2VicGFjay9ydW50aW1lL21ha2UgbmFtZXNwYWNlIG9iamVjdCIsIndlYnBhY2s6Ly9hbmFseXRpY3MtY2xpZW50Ly4vc3JjL3R5cGVzL2luZGV4LnRzIl0sInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiB3ZWJwYWNrVW5pdmVyc2FsTW9kdWxlRGVmaW5pdGlvbihyb290LCBmYWN0b3J5KSB7XG5cdGlmKHR5cGVvZiBleHBvcnRzID09PSAnb2JqZWN0JyAmJiB0eXBlb2YgbW9kdWxlID09PSAnb2JqZWN0Jylcblx0XHRtb2R1bGUuZXhwb3J0cyA9IGZhY3RvcnkoKTtcblx0ZWxzZSBpZih0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQpXG5cdFx0ZGVmaW5lKFtdLCBmYWN0b3J5KTtcblx0ZWxzZSB7XG5cdFx0dmFyIGEgPSBmYWN0b3J5KCk7XG5cdFx0Zm9yKHZhciBpIGluIGEpICh0eXBlb2YgZXhwb3J0cyA9PT0gJ29iamVjdCcgPyBleHBvcnRzIDogcm9vdClbaV0gPSBhW2ldO1xuXHR9XG59KSh0aGlzLCBmdW5jdGlvbigpIHtcbnJldHVybiAiLCIvLyBUaGUgcmVxdWlyZSBzY29wZVxudmFyIF9fd2VicGFja19yZXF1aXJlX18gPSB7fTtcblxuIiwiLy8gZGVmaW5lIGdldHRlciBmdW5jdGlvbnMgZm9yIGhhcm1vbnkgZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5kID0gZnVuY3Rpb24oZXhwb3J0cywgZGVmaW5pdGlvbikge1xuXHRmb3IodmFyIGtleSBpbiBkZWZpbml0aW9uKSB7XG5cdFx0aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGRlZmluaXRpb24sIGtleSkgJiYgIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBrZXkpKSB7XG5cdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZGVmaW5pdGlvbltrZXldIH0pO1xuXHRcdH1cblx0fVxufTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSBmdW5jdGlvbihvYmosIHByb3ApIHsgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApOyB9IiwiLy8gZGVmaW5lIF9fZXNNb2R1bGUgb24gZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5yID0gZnVuY3Rpb24oZXhwb3J0cykge1xuXHRpZih0eXBlb2YgU3ltYm9sICE9PSAndW5kZWZpbmVkJyAmJiBTeW1ib2wudG9TdHJpbmdUYWcpIHtcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTtcblx0fVxuXHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xufTsiLCJpbXBvcnQgeyBQZXJpb2QgfSBmcm9tIFwiQHNyYy9saWIvbWF0b21vL3R5cGVzXCI7XG5cbmV4cG9ydCBjbGFzcyBBbmFseXRpY3NDbGllbnRCYXNlQ2xhc3Mge1xuICBhc3luYyBnZXRWaXNpdHNQZXJQZXJpb2QoZGF0YTogVEdldFZpc2l0c1BhcmFtcykgeyB9XG5cbiAgYXN5bmMgZ2V0RXZlbnRDb3VudChkYXRhOiBUR2V0RXZlbnRDb3VudFBhcmFtcykgeyB9XG59XG5cbmV4cG9ydCB0eXBlIFRHZXRWaXNpdHNQYXJhbXMgPSB7XG4gIHBlcmlvZDogVFBlcmlvZDtcbiAgZ3JvdXBCeT86ICdkYXknIHwgXCJtb250aFwiXG4gIGdhND86IHsgcHJvcGVydHk6IHN0cmluZzsgZm9ybWF0Pzogc3RyaW5nIH07XG4gIG1hdG9tbz86IHsgc2l0ZUlkOiBudW1iZXIgfTtcbn07XG5leHBvcnQgdHlwZSBUR2V0RXZlbnRDb3VudFBhcmFtcyA9IHtcbiAgZXZlbnRzOiBBbmFseXRpY3NFdmVudHNbXTtcbiAgcGVyaW9kOiBUUGVyaW9kO1xuICBnYTQ/OiB7IHByb3BlcnR5OiBzdHJpbmcgfTtcbiAgbWF0b21vPzogeyBzaXRlSWQ6IG51bWJlciB9O1xufTtcblxuZXhwb3J0IHR5cGUgQW5hbHl0aWNzRXZlbnRzID0ge1xuICBuYW1lOiBzdHJpbmc7XG4gIG1ldGE/OiB7XG4gICAgZ2E0Pzoge1xuICAgICAgY29udmVyc2lvbj86IGJvb2xlYW47XG4gICAgICBba2V5OiBzdHJpbmddOiBhbnk7XG4gICAgfTtcbiAgICBtYXRvbW8/OiBSZWNvcmQ8c3RyaW5nLCBhbnk+O1xuICB9O1xufTtcblxuZXhwb3J0IHR5cGUgRGF0ZUludGVydmFsID0ge1xuICBmcm9tOiBzdHJpbmcgfCBudWxsO1xuICB0bzogc3RyaW5nO1xufTtcblxuZXhwb3J0IHR5cGUgVFBlcmlvZCA9IHtcbiAgZm9ybWF0OiBcIm1hZ2ljXCIgfCBcInJhbmdlXCI7XG4gIG1hZ2ljVmFsdWU6IHN0cmluZyB8IG51bWJlcjtcbiAgdmFsdWU6IHtcbiAgICBzdGFydD86IHN0cmluZztcbiAgICBlbmQ/OiBzdHJpbmc7XG4gIH07XG59O1xuIl0sIm5hbWVzIjpbInJvb3QiLCJmYWN0b3J5IiwiZXhwb3J0cyIsIm1vZHVsZSIsImRlZmluZSIsImFtZCIsImEiLCJpIiwidGhpcyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJkZWZpbml0aW9uIiwia2V5IiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsIm9iaiIsInByb3AiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJTeW1ib2wiLCJ0b1N0cmluZ1RhZyIsInZhbHVlIiwiQW5hbHl0aWNzQ2xpZW50QmFzZUNsYXNzIiwiZ2V0VmlzaXRzUGVyUGVyaW9kIiwiZGF0YSIsImdldEV2ZW50Q291bnQiXSwic291cmNlUm9vdCI6IiJ9